@model glamping_addventure3.Models.Reserva

@{
    ViewData["Title"] = "Crear Reserva";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" asp-controller="Reservas" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div>

                <div class="container-wrapper">
                    <!-- Columna izquierda -->
                    <div class="left-column">
                        <div class="container">
                            <div class="form-group">
                                <label asp-for="NroDocumentoCliente" class="control-label">Numero de Documento del Cliente:</label>
                                <input asp-for="NroDocumentoCliente" class="form-control" asp-items="ViewBag.NroDocumentoCliente" required></input>
                                <div class="form-group">
                                    <label for="NombreCliente">Nombre del Cliente:</label>
                                    <input type="text" id="NombreCliente" name="NombreCliente" class="form-control" readonly />
                                </div>
                                <div class="form-group">
                                    <label for="ApellidoCliente">Apellido del Cliente:</label>
                                    <input type="text" id="ApellidoCliente" name="ApellidoCliente" class="form-control" readonly />
                                </div>
                                <div class="form-group">
                                    <label for="TelefonoCliente">Teléfono del Cliente:</label>
                                    <input type="text" id="TelefonoCliente" name="TelefonoCliente" class="form-control" readonly />
                                </div>
                                <div class="form-group">
                                    <label for="CorreoCliente" hidden>Correo del Cliente:</label>
                                    <input type="text" id="CorreoCliente" name="CorreoCliente" class="form-control" readonly hidden />
                                </div>
                            </div>
                        </div>
                        <div class="container2">

                            <div class="form-group">
                                <label for="paquete">Paquetes Disponibles:</label>
                                <select id="paquete" name="paqueteId" class="form-control">
                                    @if (ViewBag.Paquetes != null)



                                    {



                                        foreach (var paquete in ViewBag.Paquetes)



                                        {
                                            <option value="@paquete.Idpaquete" data-precio="@paquete.Precio">@paquete.NombrePaquete</option>
                                        }



                                    }



                                    else



                                    {
                                        <option>No hay paquetes disponibles</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="precioPaquete">Precio del paquete:</label>
                                <input type="text" id="precioPaquete" name="preciopaquete" class="form-control" readonly />
                            </div>



                            <div class="form-group">
                                <label for="servicio">Servicios Disponibles:</label>
                                <select id="servicio" name="servicioids" class="form-control">
                                    @if (ViewBag.Servicios != null)



                                    {



                                        foreach (var servicio in ViewBag.Servicios)



                                        {
                                            <option value="@servicio.Idservicio" data-precio="@servicio.Costo">@servicio.NombreServicio</option>
                                        }



                                    }



                                    else



                                    {
                                        <option>No hay servicios disponibles</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <button type="button" id="agregarServicio" class="btn btn-success"><i class="fas fa-plus"></i>Agregar</button>
                            </div>

                            <div class="form-group">
                                <table class="table" id="tablaServicios">
                                    <thead>
                                        <tr>
                                            <th>Servicio</th>
                                            <th>Costo</th>
                                            <th>Cantidad</th>
                                            <th>Total</th>
                                            <th>Acción</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>

                            <input type="hidden" id="detalleServicios" name="detalleServicios">

                        </div>
                    </div>

                    <!-- Columna derecha -->
                    <div class="right-column">
                        <div class="container1">
                            <div class="form-group">
                                <label asp-for="FechaReserva" class="control-label" hidden>Fecha de Reserva</label>
                                <input asp-for="FechaReserva" class="form-control" hidden />
                                <span asp-validation-for="FechaReserva" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="FechaInicio" class="control-label">Fecha de Inicio</label>
                                <input asp-for="FechaInicio" class="form-control"
                                       type="date"
                                       min="@DateTime.Now.AddDays(1).ToString("yyyy-MM-dd")"
                                       id="fechaInicio"
                                       required />
                                <span asp-validation-for="FechaInicio" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="FechaFinalizacion" class="control-label">Fecha de Finalizacion</label>
                                <input asp-for="FechaFinalizacion" class="form-control" type="date" id="fechaFin" required />
                                <span asp-validation-for="FechaFinalizacion" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="MetodoPago" class="control-label">Metodo de Pago</label>
                                <select asp-for="MetodoPago" class="form-control" asp-items="ViewBag.MetodoPago"></select>
                                <span asp-validation-for="MetodoPago" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="IdEstadoReserva" class="control-label" readonly hidden></label>
                                <input type"hidden" asp-for="IdEstadoReserva" class="form-control" asp-items="ViewBag.IdEstadoReserva" value="1" hidden readonly></input>
                            </div>
                            <div class="form-group">
                                <label asp-for="SubTotal" class="control-label"></label>
                                <input asp-for="SubTotal" class="form-control" readonly />
                                <span asp-validation-for="SubTotal" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Descuento" class="control-label"></label>
                                <input asp-for="Descuento" class="form-control" readonly />
                                <span asp-validation-for="Descuento" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Iva" class="control-label"></label>
                                <input asp-for="Iva" class="form-control" readonly />
                                <span asp-validation-for="Iva" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="MontoTotal" class="control-label">Monto Total</label>
                                <input asp-for="MontoTotal" class="form-control" readonly />
                                <span asp-validation-for="MontoTotal" class="text-danger"></span>
                            </div>
                            <div class="d-flex justify-content-center mt-3 gap-2">
                                <button class="btn btn-primary" type="submit" style="background: #38b2ac; border: none; color: #fff; font-weight: bold;">Crear</button>
                                <a asp-action="Index" class="btn btn-secondary" style="background: #4b5563; border: none; color: #fff; font-weight: bold;">Cancelar</a>
                            </div>

                        </div>


                    </div>
                </div>






        </form>
    </div>
</div>
<!-- Modal de cliente inexistente -->
<div class="modal fade" id="clienteNoExisteModal" tabindex="-1" role="dialog" aria-labelledby="clienteNoExisteLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="clienteNoExisteLabel">Cliente no encontrado</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                El cliente no existe. ¿Quieres registrarlo?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <a asp-controller="Clientes" asp-action="create" class="btn btn-primary">Registrar cliente</a>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>

        // Validación y restricciones para fechas
        document.getElementById("fechaInicio").addEventListener("change", function () {
            const fechaInicio = this.value;
            const fechaFinInput = document.getElementById("fechaFin");

            if (fechaInicio) {
                const fechaFinMin = new Date(fechaInicio);
                fechaFinMin.setDate(fechaFinMin.getDate() + 1);
                fechaFinInput.min = fechaFinMin.toISOString().split("T")[0];
            } else {
                fechaFinInput.min = "";
            }
        });
    </script>
    <script>
        // Para obtener la información del cliente al ingresar el documento
        document.getElementById("NroDocumentoCliente").addEventListener("blur", function () {
            var documento = this.value;

            if (documento) {
                // Ajusta la URL según tu configuración de rutas
                fetch(`/Reservas/ObtenerClientePorDocumento?documento=${encodeURIComponent(documento)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Llena los campos con la información del cliente
                            document.getElementById("NombreCliente").value = data.data.nombre;
                            document.getElementById("ApellidoCliente").value = data.data.apellido;
                            document.getElementById("CorreoCliente").value = data.data.correo;
                            document.getElementById("TelefonoCliente").value = data.data.telefono;
                        } else {
                            // Muestra el modal si el cliente no existe
                            $('#clienteNoExisteModal').modal('show');

                            // Limpia los campos si no se encuentra el cliente
                            document.getElementById("NombreCliente").value = "";
                            document.getElementById("ApellidoCliente").value = "";
                            document.getElementById("CorreoCliente").value = "";
                            document.getElementById("TelefonoCliente").value = "";
                        }
                    })
                    .catch(error => console.error("Error:", error));
            }
        });

        $(document).ready(function () {
            // Función para actualizar los totales
            function actualizarTotales() {
                let precioPaquete = parseFloat($('#precioPaquete').val()) || 0;
                let subtotalServicios = 0;

                // Calcular el subtotal de los servicios
                $('#tablaServicios tbody tr').each(function () {
                    let filaSubtotal = parseFloat($(this).find('.subtotal').text().replace('$', '')) || 0;
                    subtotalServicios += filaSubtotal;
                });

                // Calcular el subtotal general (paquete + servicios)
                let subtotal = precioPaquete + subtotalServicios;
                $('#SubTotal').val(subtotal);

                // Calcular el descuento (10%)
                let descuento = Math.floor(subtotal * 0.10);
                $('#Descuento').val(descuento);

                // Calcular el IVA (12%)
                let iva = Math.floor(subtotal * 0.12);
                $('#Iva').val(iva);

                // Calcular el monto total
                let montoTotal = 300000 + subtotal + iva - descuento;
                $('#MontoTotal').val(Math.floor(montoTotal)); // Eliminar decimales
            }

            // Función para actualizar el campo oculto con los servicios seleccionados
            function actualizarCampoDetalleServicios() {
                let servicios = [];

                $('#tablaServicios tbody tr').each(function () {
                    let servicio = {
                        IdServicio: $(this).data('id-servicio'),
                        Cantidad: parseInt($(this).find('.cantidad').val()) || 1,
                        Precio: parseFloat($(this).find('td:nth-child(2)').text().replace('$', '')) || 0,
                        Subtotal: parseFloat($(this).find('.subtotal').text().replace('$', '')) || 0
                    };
                    servicios.push(servicio);
                });

                // Convertir los datos a JSON y asignarlos al campo oculto
                $('#detalleServicios').val(JSON.stringify(servicios));
            }

            // Mostrar el precio del paquete seleccionado
            $('#paquete').change(function () {
                let precioPaquete = parseFloat($(this).find(':selected').data('precio')) || 0;
                $('#precioPaquete').val(precioPaquete);
                actualizarTotales();
            });

            // Agregar servicios a la tabla y eliminarlos de la lista
            $('#agregarServicio').click(function () {
                let selectedService = $('#servicio option:selected');
                let nombreServicio = selectedService.text();
                let precioServicio = parseFloat(selectedService.data('precio')) || 0;
                let idServicio = selectedService.val();
                let cantidad = 1;

                if (nombreServicio && precioServicio) {
                    let subtotal = precioServicio * cantidad;

                    // Crear una nueva fila en la tabla
                    let nuevaFila = `
                            <tr data-id-servicio="${idServicio}">
                                <td>${nombreServicio}</td>
                                <td>$${precioServicio}</td>
                                <td><input type="number" class="form-control cantidad" value="${cantidad}" min="1" style="width: 70px;"></td>
                                <td class="subtotal">$${subtotal}</td>
                                <td><button type="button" class="btn btn-danger btn-sm eliminarServicio"><i class="fa-solid fa-trash"></i>Eliminar</button></td>
                            </tr>
                        `;

                    $('#tablaServicios tbody').append(nuevaFila);

                    // Eliminar el servicio del select
                    selectedService.remove();

                    actualizarTotales();
                    actualizarCampoDetalleServicios(); // Actualizar campo oculto
                }
            });

            // Actualizar totales y campo oculto al cambiar la cantidad
            $('#tablaServicios').on('change', '.cantidad', function () {
                let fila = $(this).closest('tr');
                let precio = parseFloat(fila.find('td:nth-child(2)').text().replace('$', '')) || 0;
                let cantidad = parseInt($(this).val()) || 1;
                let subtotal = precio * cantidad;

                fila.find('.subtotal').text('$' + subtotal);
                actualizarTotales();
                actualizarCampoDetalleServicios(); // Actualizar campo oculto
            });

            // Eliminar servicio de la tabla y devolverlo al select
            $('#tablaServicios').on('click', '.eliminarServicio', function () {
                let fila = $(this).closest('tr');
                let idServicio = fila.data('id-servicio');
                let nombreServicio = fila.find('td:nth-child(1)').text();
                let precioServicio = parseFloat(fila.find('td:nth-child(2)').text().replace('$', ''));

                // Agregar de nuevo el servicio al select
                $('#servicio').append(`<option value="${idServicio}" data-precio="${precioServicio}">${nombreServicio}</option>`);

                // Eliminar la fila
                fila.remove();

                actualizarTotales();
                actualizarCampoDetalleServicios(); // Actualizar campo oculto
            });

            // Inicializar cálculo al cargar la página
            $('#paquete').change();
        });
    </script>

}
<style>
    .container-wrapper {
        display: flex;
        justify-content: space-between;
        gap: 100px; /* Espacio entre columnas */
    }

    .left-column, .right-column {
        flex: 1; /* Hace que ambas columnas ocupen el mismo espacio */
    }

    .container {
        position: relative;
        border: 2px solid black;
        padding: 40px;
        width: 500px;
        margin: 20px;
        padding-bottom: 30px;
        padding-top: 60px;
        background-color: #1f2937; /* Fondo oscuro */
        color: #e5e7eb; /* Texto claro */
    }

        .container::before {
            content: 'Información Cliente'; /* Título de la primera caja */
            position: relative;
            border-radius:20px;
            top: -15px;
            left: 0px;
            background-color: #1f2937; /* Fondo oscuro */
            padding: 0 40px;
            font-weight: bold;
            font-family: Arial, sans-serif;
            color: #e5e7eb; /* Color claro para el título */
        }

    .container1 {
        position: relative;
        border: 2px solid black;
        padding: 20px;
        padding-bottom: 30px;
        padding-top: -30px;
        margin-bottom: 40px;
        width: 500px;
        height: 800px;
        border-radius: 10px;
        background-color: #1f2937; /* Fondo oscuro */
        color: #e5e7eb; /* Texto claro */
    }

        .container1::before {
            content: 'Información Reserva'; /* Título de la segunda caja */
            position: relative;
            top: -15px;
            left: 0px;
            background-color: #1f2937; /* Fondo oscuro */
            padding: 0 0px;
            font-weight: bold;
            border-radius: 20px;
            font-family: Arial, sans-serif;
            color: #e5e7eb; /* Color claro para el título */
            margin-top: 40px;

        }

    .container2 {
        position: relative;
        border: 2px solid black;
        padding: 20px;
        width: 500px;
        margin: 20px;
        border-radius: 10px;
        background-color: #1f2937; /* Fondo oscuro */
        color: #e5e7eb; /* Texto claro */
    }

        .container2::before {
            content: 'Paquetes y Servicios'; /* Título de la tercera caja */
            position: relative;
            top: -15px;
            left: 0px;
            background-color: #1f2937; /* Fondo oscuro */
            padding: 0 10px;
            font-weight: bold;
            border-radius: 20px;
            font-family: Arial, sans-serif;
            color: #e5e7eb; /* Color claro para el título */

        }

    .container3 {
        position: relative;
        border: 2px solid black;
        padding: 20px;
        margin: 20px;
        border-radius: 10px;
        background-color: #1f2937; /* Fondo oscuro */
        color: #e5e7eb; /* Texto claro */

    }

        .container3::before {
            content: ''; /* Sin título en la cuarta caja */
            display: none; /* No muestra título */

        }

    .form-label {
        color: #ffffff; /* Cambiar color a blanco para las etiquetas */
    }

    #permissionSearch {
        color: #ffffff; /* Cambiar color a blanco para el input de búsqueda */
    }

    #nombreRol {
        color: #ffffff; /* Cambiar color a blanco para el input del nombre de rol */
    }

    .modal-lg {
        max-width: 300%; /* Ajuste para un modal más grande */
        height: auto;
        overflow-y: auto; /* Habilitar scroll si el contenido es extenso */
        margin-bottom: 90px;
    }

    .btn-create {
        background-color: #38b2ac; /* Verde brillante */
        border: none;
        color: #fff;
        font-size: 16px;
        font-weight: bold;
        padding: 12px 20px;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        transition: background-color 0.3s, transform 0.2s;
    }

        .btn-create:hover {
            background-color: #319795; /* Verde más oscuro al pasar el mouse */
            transform: translateY(-2px); /* Animación sutil */
        }

    .btn-secondary {
        background-color: #4b5563; /* Gris oscuro */
        border: none;
        color: #fff;
        font-size: 16px;
        font-weight: bold;
        padding: 12px 20px;
        border-radius: 8px;
        transition: background-color 0.3s ease;
    }

        .btn-secondary:hover {
            background-color: #374151; /* Gris más oscuro al pasar el mouse */
        }

    .permissions-container {
        max-height: 400px;
        overflow-y: auto;
        border: 1px solid #4b5563;
        background-color: #2d3748;
        border-radius: 10px;
    }

    .permission-item {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        margin-bottom: 10px;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 34px;
        height: 20px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        border-radius: 34px;
        transition: 0.4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 14px;
            width: 14px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            border-radius: 50%;
            transition: 0.4s;
        }

    input:checked + .slider {
        background-color: #38b2ac; /* Verde brillante */
    }

        input:checked + .slider:before {
            transform: translateX(14px);
        }

    .container {
        background-color: #1f2937; /* Fondo oscuro */
        color: #e5e7eb; /* Texto claro */
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        margin-top: 30px;
    }

    .form-control {
        background: #2d3748; /* Fondo oscuro para inputs */
        border: 1px solid #4b5563; /* Borde oscuro */
        color: #e5e7eb; /* Texto claro */
        border-radius: 8px;
        padding: 10px;
        transition: border-color 0.3s, background 0.3s;
    }

        .form-control:focus {
            border-color: #38b2ac; /* Verde brillante al enfocar */
            outline: none;
            background: #2d3748;
            color: #e5e7eb; /* Asegúrate de que el texto sea blanco al enfocar */
        }

    .permission-nombre {
        color: #e5e7eb;
    }

    /* Cambiar color de los placeholders */
    ::placeholder {
        color: #ffffff !important; /* Cambiar color a blanco para los placeholders */
    }

    #permissionSearch::placeholder,
    #nombreRol::placeholder {
        color: #ffffff !important; /* Asegurarse de que los placeholders sean blancos */
    }
</style>