@model glamping_addventure3.Models.Role

@{
    ViewData["Title"] = "Editar Rol";
}


<div class="container mt-4" style="max-width: 1000px;">
    <form asp-action="Edit" method="post" class="mt-4" onsubmit="return validateEditForm()">
        <input type="hidden" asp-for="Idrol" />

        <div class="row mb-3 align-items-end">
            <div class="col-md-6">
                <label asp-for="Nombre" class="form-label">Nombre del Rol</label>
                <input asp-for="Nombre" class="form-control form-control-sm" id="nombreRol" placeholder="Ingrese el nombre del rol" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="col-md-6">
                <label for="permissionSearch" class="form-label">Buscar Permiso</label>
                <input type="text" id="permissionSearch" class="form-control form-control-sm" placeholder="Buscar permisos..." onkeyup="filterPermissions()" />
            </div>
        </div>

        <div class="row mb-3 align-items-end">
            <div class="col-md-6">
                <label class="switch">
                <input type="checkbox" id="selectAll" class="form-check-input" onclick="toggleSelectAll()" />
                    <span class="slider round"></span>
                </label>
                <label for="selectAll" class="form-check-label">Seleccionar todo</label>
            </div>
            <label class="form-label">Permisos:</label>
            <div class="permissions-container p-3">
                <div class="row" id="permissionsList">
                    @for (int i = 0; i < ViewBag.Permisos.Count; i++)
                    {
                        <div class="col-6 col-md-3 mb-2 d-flex align-items-center permission-item">
                            <label class="switch me-2">
                                <input type="checkbox" class="permiso-checkbox" name="selectedPermisos" value="@ViewBag.Permisos[i].Idpermiso"
                                @(ViewBag.PermisosAsignados.Contains(ViewBag.Permisos[i].Idpermiso) ? "checked" : "") />
                                <span class="slider round"></span>
                            </label>
                            <label class="form-check-label permiso-nombre" style="font-size: 0.9rem;">@ViewBag.Permisos[i].NombrePermisos</label>
                        </div>
                    }
                </div>
            </div>
            <div id="validationMessage" class="text-danger mt-2" style="display: none;"></div> <!-- Mensajes de validación -->
        </div>

        <!-- Botones -->
        <div class="d-flex justify-content-center mt-3 gap-2">
            <button class="btn btn-primary" type="submit" style="background: #38b2ac; border: none; color: #fff; font-weight: bold;">Editar</button>
            <a asp-action="Index" class="btn btn-secondary" style="background: #4b5563; border: none; color: #fff; font-weight: bold;">Cancelar</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<style>
    .form-label {
        color: #ffffff; /* Cambiar color a blanco para las etiquetas */
    }

    #permissionSearch {
        color: #ffffff; /* Cambiar color a blanco para el input de búsqueda */
    }

    #nombreRol {
        color: #ffffff; /* Cambiar color a blanco para el input del nombre de rol */
    }

    /* Otros estilos permanecen igual */
    .modal-lg {
        max-width: 300%; /* Ajuste para un modal más grande */
        height: auto;
        overflow-y: auto; /* Habilitar scroll si el contenido es extenso */
        margin-bottom: 90px;
    }

    .btn-create {
        background-color: #38b2ac; /* Verde brillante */
        border: none;
        color: #fff;
        font-size: 16px;
        font-weight: bold;
        padding: 12px 20px;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        transition: background-color 0.3s, transform 0.2s;
    }

        .btn-create:hover {
            background-color: #319795; /* Verde más oscuro al pasar el mouse */
            transform: translateY(-2px); /* Animación sutil */
        }

    .btn-secondary {
        background-color: #4b5563; /* Gris oscuro */
        border: none;
        color: #fff;
        font-size: 16px;
        font-weight: bold;
        padding: 12px 20px;
        border-radius: 8px;
        transition: background-color 0.3s ease;
    }

        .btn-secondary:hover {
            background-color: #374151; /* Gris más oscuro al pasar el mouse */
        }

    /* Estilos como los que ya has definido */
    .form-label {
        color: #ffffff; /* Cambiar color a blanco para las etiquetas */
    }

    /* Otros estilos permanecen igual */
    .permissions-container {
        max-height: 400px;
        overflow-y: auto;
        border: 1px solid #4b5563;
        background-color: #2d3748;
        border-radius: 10px;
    }

    .permission-item {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        margin-bottom: 10px;
    }

    .permission-item {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        margin-bottom: 10px;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 34px;
        height: 20px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        border-radius: 34px;
        transition: 0.4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 14px;
            width: 14px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            border-radius: 50%;
            transition: 0.4s;
        }

    input:checked + .slider {
        background-color: #38b2ac; /* Verde brillante */
    }

        input:checked + .slider:before {
            transform: translateX(14px);
        }

    .container {
        background-color: #1f2937; /* Fondo oscuro */
        color: #e5e7eb; /* Texto claro */
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        margin-top: 30px;
    }

    .form-control {
        background: #2d3748; /* Fondo oscuro para inputs */
        border: 1px solid #4b5563; /* Borde oscuro */
        color: #e5e7eb; /* Texto claro */
        border-radius: 8px;
        padding: 10px;
        transition: border-color 0.3s, background 0.3s;
    }

        .form-control:focus {
            border-color: #38b2ac; /* Verde brillante al enfocar */
            outline: none;
            background: #2d3748;
        }

    .permission-nombre {
        color: #e5e7eb;
    }

    /* Cambiar color de los placeholders */
    ::placeholder {
        color: #ffffff !important; /* Cambiar color a blanco para los placeholders */
    }

    #permissionSearch::placeholder,
    #nombreRol::placeholder {
        color: #ffffff !important; /* Asegurarse de que los placeholders sean blancos */
    }
</style>


<script>
    // Lista simulada de nombres de roles existentes (esto debe venir del servidor)
    const existingRoles = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ExistingRoles ?? new List<string>()));

    function validateEditForm() {
        const nombreRol = document.getElementById("nombreRol").value.trim();
        const checkboxes = document.querySelectorAll(".permiso-checkbox:checked");
        const validationMessage = document.getElementById("validationMessage");

        // Limpiar mensajes previos
        validationMessage.style.display = 'none';
        validationMessage.innerText = '';

        // Validar que el nombre no esté vacío
        if (nombreRol === "") {
            validationMessage.style.display = 'block';
            validationMessage.innerText = "Debe ingresar un nombre para el rol.";
            return false;
        }

        // Validar que el nombre no se repita (excepto el nombre actual del rol)
        const currentRoleName = "@Model.Nombre";
        if (existingRoles.includes(nombreRol) && nombreRol !== currentRoleName) {
            validationMessage.style.display = 'block';
            validationMessage.innerText = "Ya existe un rol con este nombre.";
            return false;
        }

        // Validar que al menos un permiso esté seleccionado
        if (checkboxes.length === 0) {
            validationMessage.style.display = 'block';
            validationMessage.innerText = "Debe seleccionar al menos un permiso.";
            return false;
        }

        return true;
    }

    function filterPermissions() {
        const searchValue = document.getElementById("permissionSearch").value.toLowerCase();
        const permissions = document.querySelectorAll(".permission-item");

        permissions.forEach(permission => {
            const permissionName = permission.querySelector(".permiso-nombre").innerText.toLowerCase();
            permission.style.display = permissionName.includes(searchValue) ? "flex" : "none";
        });
    }

    function toggleSelectAll() {
        const selectAllCheckbox = document.getElementById("selectAll");
        const checkboxes = document.querySelectorAll(".permiso-checkbox");

        checkboxes.forEach(checkbox => {
            checkbox.checked = selectAllCheckbox.checked;
        });
    }
</script>